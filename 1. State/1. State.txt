상태 관리는 웹 애플리케이션이 복잡해짐에 따라 중요한 주제가 되었습니다.
단순히 useState, props drilling으로 상태를 관리한다면 depth가 깊은 하위 컴포넌트로
전달 과정이 번거로울 뿐만 아니라 의도치 않은 상태변화를 일으킬 수도 있습니다.
이를 방지하기 위해 상태는 중앙에서 관리하는 것이 효율적입니다.

중앙상태관리의 장점은
1. 웹애플리케이션의 동작을 예측 가능하게 만들어 버그를 줄이고 디버깅을 쉽게합니다
2. 변경사항에 쉽게 대응할 수 있어 유지보수성을 높입니다
3. 상태관리 로직을 분리하면 재사용성이 높아집니다
4. 코드의 일관성을 가져 팀원들과의 협업을 원활할게 합니다

저는 최근에 상태관리를 Redux에서 Recoil로 변경하였는데 그 이유는
1. 간결한 코드로 보일러플레이트 코드를 줄일 수 있었습니다
2. 무엇보다 useState와 사용법이 비슷해 훨씬 직관적이고 사용하기 쉬워 협업을 원할히 진행할 수 있었습니다